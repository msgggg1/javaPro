package days14;

/**
 * @author msg
 * @date 2025. 2. 20. - 오전 10:22:56
 * @subject p.204 chapter.06 클래스
 * @content
 */

public class Ex02 {

	public static void main(String[] args) {
		/*
		 *   1. 객체지향 프로그래밍( Object Oriented Programming )
		 *   예) 조립컴퓨터 = 부품 + 부품 + 부품 + 부품 + ...
		 *                              조립
		 *                              
		 *      소프트웨어  = 객체 + 객체 + 객체 + 객체(차트) + 객체 +   
		 *      애플케이션                            
		 *      생산성 향상..
		 *      유지/보수 용이
		 *   2. 클래스 ? 객체의 설계도
		 *   3. 객체(object) 클래스(설계도)로 만든 실제 존재하는 유무형의 것. 
		 * 	 4. 객체 = 속성(특징) + 기능(동작, 일)
		 * 		(자바)  =필드       = 메소드
		 * 	5. 객체 모델링(Object Modeling) ? 현실세계의 객체를 소프트웨어 객체로 설계하는 것. 
		 * 	6. OOP 특징 = 클래스의 특징
		 * 		1) 캡슐화 - 객체의 필드, 메서드의 실제 구현 내용을 외부에 감추는 것. 제한자( Modifier ) == 접근지정자 + 기타제어자
		 * 		  (은닉화)															    접근제한자 (public, private)
		 * 		2) 상속성 - 부모객체의 필드, 메서드를 자식 객체에게 물려주는 것. 
		 * 			   ㄴ 코드의 재사용. 유지보수 용이(최소화) 
		 * 	***	3) 다형성 *** 
		 * 		4) 추상화 
		 * 
		 *	7. 클래스, 객체 , 인스턴스 설명
		 *    - 인스턴스? 클래스로부터 생성된 객체를 해당 클래스의 인스턴스라고 한다. //클래스를 기반으로 메모리에 할당된 "실제 객체"를 인스턴스라고 함.
즉, **객체 중에서도 "사용할 수 있는 상태"**가 된 것을 인스턴스라고 부름.
              (저는 해당 클래스 타입을 가지고 있는 변수를 객체, 그 객체에 주소값이 할당된것이 인스턴스 이렇게 알고 있었습니다)


		 *	8. 인스턴스화 ? 클래스로부터 객체를 만드는 과정
		 *	
		 *	9. 객체의 구성요소 (= 멤버)
		 *         현실              객체모델링 후 
		 *		1) 속성 == 특징==      *필드* == 멤버변수
		 *		2) 기능 == 일(동작) == *메소드* == 멤버함수
		 
		 * 10. 클래스 설계하는 과정 (= 클래스 선언)
		 * 	  1) 객체의 구성요소 (속성, 기능) 파악 -> 목록 작성
		 * 	  2) 객체 모델링 - 필드, 메서드
		 * 	  3) 클래스 선언
		 *       [접] [기]   class 클래스명 [extends 부모클래스] [implements 인터페이스...]{
		 *       제한자(modifier)
		 *       		// 필드 선언
		 *       		// 메서드 선언
		 *       }
		 *       //시작객체, 시작부품: 클래스안에 메인메소드
		 *     4) 객체 생성 - 테스트
		 *     5) 문제점 파악 - 유지, 보수
		 * 	   6) 상용화
		 * 	   7) 기능추가, 확장 + 유지, 보수 -> 버전 관리
		 * 
		 * ---------------> 첫번째 플젝
		 * 
		 * 예) 신형 자동차 클래스 설계
		 *  1) 자동의 구성요소 (속성, 기능) 파악 -> 목록 작성
		 *  2) 클래스 선언
		 *  :
		 *  
		 * */

	} // main

} // class
