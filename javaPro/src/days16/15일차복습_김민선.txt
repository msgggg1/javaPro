1. private로 선언된 필드에 접근한 방법에 대해서 설명하세요.
	1) private -> public
	2) getter, setter 메소드로 접근

2. 기본형/참조형 매개변수와 기본형/참조형 반환타입에 대해서 설명하세요.  ( 개념 )
	매개변수 자료형에 따라 기본형/참조형으로 나뉨. 
	참조형 매개변수에서 클래스 참조형의 경우 클래스복사라고 생각하면 됨. 매개변수로 주어진 클래스의 주소값을 	참조.
	참조형 반환타입은, 메소드내에서 새로운 인스턴스를 형성하여 그 인스턴스를 반환함.
 

3. 생성자에 대해서 설명하세요.
	1) 필드를 초기화 하는 역할을 하며
	2) 따라서 반환형은 없다. 
	3) 상속이 불가하며
	4) 오버로딩 가능하다. 
	5) 생성자가 없는 경우 컴파일 할때 자동 생성된다. 
	6) 디폴트 생성자: 매개변수가 없는 생성자 
	7) 

4. this 키워드에 대해서 설명하세요.
	클래스 자기 자신의 주소값을 갖는다.
	1) 클래스 멤버 가리킬때 사용
	2) 클래스 내의 메소드 안에서 다른 메소드 가리킬때 사용
	3) 클래스 내에서 클래스 자신을 매개변수, 리턴값으로 넘길때 사용

5. 아래 코딩을 클래스( 객체) 배열 초기화를 사용해서 코딩하세요 
		Student s1 = new Student();
		Student s2 = new Student();
		Student s3 = new Student();

	Student [] students = {
					new Student[0],
					new Student[1],
					new Student[2],
					};

6. 객체 복사(copy)와 객체 복제(clone)에 대해서 설명하세요.. 		
	복사: 같은 주소값을 참조하는 것
	복제: 힙영역에 공간을 새로 생성하고 다른 주소값을 가지나, 구성멤버와 그 값과 내용이 동일한 것. 

7. 에러 메시지 : The constructor System() [is not visible] 에 대해서 설명하세요.
	접근지정자(private, protected, default)때문에 접근할 수 없는 상태

8. [static 키워드]에 대해서 설명하세요. 
	프로그램 시작시 method area에 정보올라감. 객체 생성 여부와 상관없이 사용 가능함.
	호출 시에는 클래스명.변수, 클래스명.메소드(); 로 호출한다.
	 static 키워드 가지고 있는 경우 this 사용 불가

9. "오버로딩"에 대해서 설명하세요.
	같은 이름을 가졌으나 매개변수의 타입, 순서, 개수를 다르게 하여 정의하는 것. 
	메소드, 생성자 오버로딩 가능하다.
 
10. 아래 두 문자열의 대소문자 구분 없이, 순서 상관 없이 같은 문자여부를 체크하는 코딩을 하세요. 
	String n = "keNik";   
	String m= "kKnie";    



