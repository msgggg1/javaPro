1. "싱글톤 클래스"를 구현하는 방법에 대해서 설명하세요...
	[싱글톤 패턴]
	ㄴ 애플리케이션에서 오직 1개의 객체(인스턴스) 생성하는 패턴
	ㄴ 구현방법
		1) private ㅅ
	
	1) lazy
	class Singleton{
		
		private static Singleton instance;
		
		private Singleton getInstance{
			
				if( instance == null) instance = new Singleton();
				
				return instance;
			}
	}

	2) synchronized
	3) 이중잠금.. 

2. instanceof 연산자에 대해서 설명하세요.
	두 객체의 관계가 상속관계인지 판단하기 위한 연산자로, 
	특정 객체에서 다운캐스팅이 필요할때 사용하며, else if 구문을 써서 판단한다.
 
3. [매개변수 다형성]에 대해서 설명하세요 .
	매소드의 매개변수로 상위클래스나 인터페이스를 주어, 
	상속관계에 있는 객체가 매개변수로 들어와 다양한 성질(오버라이딩된 메소드)을 나타낼 수 있게 되는 것. 
 
4. [] 대괄호 안에 있다. 없다 골라서 적으세요.
  1) 메서드에 static과 abstract를 함께 사용할 수 [ 있다 ]. 
  2) 클래스에 static과 final을 동시에 사용할 수 [ 없다 ]. 
  	static class - 단독으로 사용 못함(중첩클래스에서 가능)
  3) abstract메서드의 접근 제어자가 private일  수 [ 없다 ].
  	물려받은 자식이 반드시 재정의해야함.  
  4) 메서드에 private과 final을 같이 사용할 필요 [ 있다 ]. 선언은 가능하다.
  
5. 클래스(OOP)의 특징에 대해서 상세히 설명하세요.
	객체를 조립하여 프로그램을 구성하는 것. 
 
6. abstract 키워드에 대해서 설명하세요.
	클래스 앞, 메소드 앞에 붙을 수 있다.  
	abstract 클래스: 공통된 부분을 모아둔 클래스로, 보통 객체 생성시 마다 재정의가 필요한 멤버들을 모아놓는다.
				자식 클래스가 재정의 하지않으면, 그 자식클래스도 abstract클래스가 된다. 
	abstract 메소드: 메소드의 prototype만으로 표기한다. 자식클래스에서 꼭 오버라이딩 되어야 한다.   

7. 인터페이스(interface) 에 대해서 상세히 설명하세요.
	일종의 클래스이며, 추상메소드, 상수로만 구성된다. 
	따라서 인터페이스 스스로는 객체를 생성하지 못하고 다른 객체들의 구성을 돕는 용도로 사용된다. 
	객체에서 인터페이스 구현시 implements를 사용하고 ,를 이용해 다중상속이 가능하다. 인터페이스로 업캐스팅도 가능하다. 
	 -> 따라서 매개변수 다형성 실현가능하다.  
	인터페이스 끼리는 extends를 이용한 상속이 가능하다.
	jdk18부터 static메소드, default메소드도 구현 가능하다.
	장점: 독립적인 작업 가능, 표준화, 관련없는 객체를 연관지어줌
	
	



